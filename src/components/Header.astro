---
import { SITE_TITLE } from '../consts';
import HeaderLink from './HeaderLink.astro';
import TopTrack from './TopTrack.astro';
import RecentFilm from './RecentFilm.astro';

const isHomePage = Astro.url.pathname === '/';
---

<header>
	<nav>
		<HeaderLink href="/">Home</HeaderLink>
		<HeaderLink href="/blog">Writing</HeaderLink>
		<HeaderLink href="#" class="coming-soon">Product Design (coming soon)</HeaderLink>
		<HeaderLink href="#" class="coming-soon">Side Projects (coming soon)</HeaderLink>
		<HeaderLink href="#" class="coming-soon">Illustration (coming soon)</HeaderLink>
		<HeaderLink href="#" class="coming-soon">Speaking (coming soon)</HeaderLink>
	</nav>
	{!isHomePage && (
		<div class="hero-nonHome" id="marquee-container">
			<div class="marquee" id="marquee">
				<div class="marquee-content">
					<div class="marquee-item">
						<span>ðŸ¦„ {SITE_TITLE} </span><span class="header-separator">|</span><span> <TopTrack /></span><span class="header-separator">|</span><span> <RecentFilm /></span><span class="header-separator">&bull;</span>
					</div>
					<div class="marquee-item" aria-hidden="true">
						<span>ðŸ¦„ {SITE_TITLE} </span><span class="header-separator">|</span><span> <TopTrack /></span><span class="header-separator">|</span><span> <RecentFilm /></span><span class="header-separator">&bull;</span>
					</div>
					<div class="marquee-item" aria-hidden="true">
						<span>ðŸ¦„ {SITE_TITLE} </span><span class="header-separator">|</span><span> <TopTrack /></span><span class="header-separator">|</span><span> <RecentFilm /></span><span class="header-separator">&bull;</span>
					</div>
				</div>
			</div>
		</div>
	)}
</header>
<style>
	header {
		margin: 0;
		padding: 0;
	}

	.hero-nonHome {
		display: flex;
		align-items: center;
		font-family: 'Alegreya', serif;
		font-style: italic;
		font-size: 1.5rem;
		color: var(--grey);
		padding: 0 1em;
		overflow: hidden;
		text-wrap: nowrap;
		width: 100%;
		line-height: 0.7;
		white-space: nowrap;
	}
	
	.marquee {
		display: inline-block;
		animation: scroll 30s linear infinite;
		animation-play-state: var(--play-state, running);
	}
	
	.marquee-content {
		display: flex;
		align-items: center;
		white-space: nowrap;
	}
	
	.marquee-item {
		flex-shrink: 0;
		display: flex;
		align-items: center;
		white-space: nowrap;
	}
	
	@keyframes scroll {
		0% {
			transform: translateX(0);
		}
		100% {
			transform: translateX(-50%);
		}
	}
	
	/* Smooth transition for animation duration changes */
	.marquee {
		transition: animation-duration 0.3s ease;
	}
	.hero-nonHome h2 {
		margin: 0;
		display: inline-block;
		font-size: 1.25rem;
		
	}
	.header-separator {
		margin: 0 0.5rem;
		font-style: normal;
	}
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;

	}
	nav a {
		padding: 1em 0.5em;
		color: var(--black);
		flex-grow: 1;
		text-decoration: none;
		display: block;
		cursor: pointer;
		font-family: 'Alegreya', serif;
		text-align: center;
		text-transform: uppercase;
		font-size: 1rem;
		font-weight: 600;
		line-height: 1;
		align-self: stretch;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	/* Define color variables for each nav item */
	nav a:nth-of-type(1) { --nav-color: var(--coral); }
	nav a:nth-of-type(2) { --nav-color: var(--blue); }
	nav a:nth-of-type(3) { --nav-color: var(--yellow); }
	nav a:nth-of-type(4) { --nav-color: var(--red); }
	nav a:nth-of-type(5) { --nav-color: var(--green); }
	nav a:nth-of-type(6) { --nav-color: var(--purple); }

	/* Apply colors using the custom property */
	nav a {
		background-color: transparent;
		color: var(--black);
		border-top: 3px solid var(--black);
		border-bottom: 3px solid var(--black);
		border-right: 3px solid var(--black);
	}

	nav a:last-of-type {
		border-right: none;
	}

	/* Single hover rule for all nav items */
	nav a:hover {
		background-color: color-mix(in srgb, var(--nav-color) 10%, transparent);
		color: var(--black);
		cursor: pointer;
		text-decoration: underline;
		text-underline-offset: 0.25em;
		text-decoration-thickness: 3px;
		text-decoration-color: var(--nav-color);
	}
	nav a.active {
		text-decoration: none;
		background-color: color-mix(in srgb, var(--nav-color) 10%, transparent);
		color: var(--black);
		text-decoration: underline;
		text-underline-offset: 0.25em;
		text-decoration-thickness: 3px;
		text-decoration-color: var(--nav-color);
	}

	nav a.coming-soon {
		color: var(--grey);
	}

	nav a.coming-soon:hover {
		background-color: color-mix(in srgb, var(--nav-color) 10%, transparent);
		color: var(--grey);
		cursor: not-allowed;
		text-decoration: underline;
		text-underline-offset: 0.25em;
		text-decoration-thickness: 3px;
		text-decoration-color: var(--grey);
	}
</style>

<script>
	// Simple pause/resume with smooth transition
	const marqueeContainer = document.getElementById('marquee-container');
	const marquee = document.getElementById('marquee');
	
	if (marqueeContainer && marquee) {
		marqueeContainer.addEventListener('mouseenter', () => {
			marquee.style.setProperty('--play-state', 'paused');
		});
		
		marqueeContainer.addEventListener('mouseleave', () => {
			marquee.style.setProperty('--play-state', 'running');
		});
	}
</script>
